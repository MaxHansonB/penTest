(define (domain pentest)

(:requirements :typing :strips)

(:types host architecture os software)

(:constants
                x86 arm - architecture
                windows mac linux - os
                msteams googlechrome sql - software
)

(:predicates
                (attacker-at ?h - host)
                (compromised ?h - host)
                (has-os ?h - host ?o - os)
                (has-architecture ?h - host ?r - architecture)
                (has-software ?h - host ?s - software)
                (updated ?h - host)
                (firewall ?h - host)
                (neighbor ?h1 - host ?h2 - host)
)

;; Attack 1: Applies to windows machines with MS teams,
;; but only if they have x86 architercture, and are not updated.
(:action msteams-exploit
                :parameters (?h1 - host ?h2 - host)

                :precondition (and (attacker-at ?h1)
                                   (neighbor ?h1 ?h2)
                                   (not (compromised ?h2))
                                   (has-os ?h2 windows)
                                   (has-software ?h2 msteams)
                                   (has-architecture ?h2 x86)
                                   (not (updated ?h2))
                                   (not (firewall ?h2))
                              )

                :effect       (and (compromised ?h2)
                                   (attacker-at ?h2)
                                   (not (attacker-at ?h1))
                              )
)

;; Attack 2: Applies to Mac machines with Google Chrome and ARM architecture.
(:action chrome-exploit
                :parameters (?h1 - host ?h2 - host)

                :precondition (and (attacker-at ?h1)
                                   (neighbor ?h1 ?h2)
                                   (not (compromised ?h2))
                                   (has-os ?h2 mac)
                                   (has-software ?h2 googlechrome)
                                   (has-architecture ?h2 arm)
                                   (not (firewall ?h2))
                              )

                :effect       (and (compromised ?h2)
                                   (attacker-at ?h2)
                                   (not (attacker-at ?h1))
                              )
)

;; Attack 3: Applies to windows/Linux machines running SQL which *are* updated.
(:action sql-exploit
                :parameters (?h1 - host ?h2 - host)

                :precondition (and (attacker-at ?h1)
                                   (neighbor ?h1 ?h2)
                                   (not (compromised ?h2))
                                   (or (has-os ?h2 windows) (has-os ?h2 linux))
                                   (has-software ?h2 sql)
                                   (updated ?h2)
                                   (not (firewall ?h2))
                              )

                :effect       (and (compromised ?h2)
                                   (attacker-at ?h2)
                                   (not (attacker-at ?h1))
                              )
)

;; Attack 4: Applies to any non-updated Linux machine.
(:action linux-exploit
                :parameters (?h1 - host ?h2 - host)

                :precondition (and (attacker-at ?h1)
                                   (neighbor ?h1 ?h2)
                                   (not (compromised ?h2))
                                   (has-os ?h2 linux)
                                   (not (updated ?h2))
                                   (not (firewall ?h2))
                              )

                :effect       (and (compromised ?h2)
                                   (attacker-at ?h2)
                                   (not (attacker-at ?h1))
                              )
)

;; Attack 5: Dissable a firewall, so attack can continue.
(:action disable-firewall
                :parameters (?h1 - host ?h2 - host)

                :precondition (and (attacker-at ?h1)
                                  (neighbor ?h1 ?h2)
                                  (not (compromised ?h2))
                                  (firewall ?h2)
                                  (or (has-os ?h2 windows) (has-os ?h2 mac))
                                  (not (updated ?h2))
                              )

                :effect       (not (firewall ?h2))
)

;; End bracket for whole domain
)